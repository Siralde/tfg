[{"/Users/aldemarogonzalez/Desktop/TFG/tfg/src/index.js":"1","/Users/aldemarogonzalez/Desktop/TFG/tfg/src/aws-exports.js":"2","/Users/aldemarogonzalez/Desktop/TFG/tfg/src/App.js":"3","/Users/aldemarogonzalez/Desktop/TFG/tfg/src/components/layout.js":"4","/Users/aldemarogonzalez/Desktop/TFG/tfg/src/components/header.js":"5","/Users/aldemarogonzalez/Desktop/TFG/tfg/src/containers/HomePage.js":"6","/Users/aldemarogonzalez/Desktop/TFG/tfg/src/containers/RoundDetailsPage.js":"7","/Users/aldemarogonzalez/Desktop/TFG/tfg/src/ethereum/web3.js":"8","/Users/aldemarogonzalez/Desktop/TFG/tfg/src/components/questions.js":"9","/Users/aldemarogonzalez/Desktop/TFG/tfg/src/ethereum/campaignFactory.js":"10","/Users/aldemarogonzalez/Desktop/TFG/tfg/src/graphql/queries.js":"11","/Users/aldemarogonzalez/Desktop/TFG/tfg/src/graphql/mutations.js":"12","/Users/aldemarogonzalez/Desktop/TFG/tfg/src/containers/CreateRoundPage.js":"13","/Users/aldemarogonzalez/Desktop/TFG/tfg/src/containers/CreateCampaignPage.js":"14","/Users/aldemarogonzalez/Desktop/TFG/tfg/src/containers/InvestPage.js":"15","/Users/aldemarogonzalez/Desktop/TFG/tfg/src/ethereum/campaign.js":"16"},{"size":319,"mtime":1609935754323,"results":"17","hashOfConfig":"18"},{"size":422,"mtime":1609971922148,"results":"19","hashOfConfig":"18"},{"size":320,"mtime":1597615028890,"results":"20","hashOfConfig":"18"},{"size":2550,"mtime":1609876623150,"results":"21","hashOfConfig":"18"},{"size":1376,"mtime":1609872930904,"results":"22","hashOfConfig":"18"},{"size":1493,"mtime":1609957393677,"results":"23","hashOfConfig":"18"},{"size":8345,"mtime":1609957272564,"results":"24","hashOfConfig":"18"},{"size":399,"mtime":1601982506480,"results":"25","hashOfConfig":"18"},{"size":586,"mtime":1597841634570,"results":"26","hashOfConfig":"18"},{"size":644,"mtime":1609930489810,"results":"27","hashOfConfig":"18"},{"size":1038,"mtime":1609957436799,"results":"28","hashOfConfig":"18"},{"size":1585,"mtime":1609957436857,"results":"29","hashOfConfig":"18"},{"size":8186,"mtime":1609960049570,"results":"30","hashOfConfig":"18"},{"size":9634,"mtime":1609955246207,"results":"31","hashOfConfig":"18"},{"size":3529,"mtime":1609969711299,"results":"32","hashOfConfig":"18"},{"size":192,"mtime":1609936669054,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"3salhw",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/Users/aldemarogonzalez/Desktop/TFG/tfg/src/index.js",[],["68","69"],"/Users/aldemarogonzalez/Desktop/TFG/tfg/src/aws-exports.js",[],"/Users/aldemarogonzalez/Desktop/TFG/tfg/src/App.js",[],"/Users/aldemarogonzalez/Desktop/TFG/tfg/src/components/layout.js",[],"/Users/aldemarogonzalez/Desktop/TFG/tfg/src/components/header.js",[],"/Users/aldemarogonzalez/Desktop/TFG/tfg/src/containers/HomePage.js",[],"/Users/aldemarogonzalez/Desktop/TFG/tfg/src/containers/RoundDetailsPage.js",["70"],"import React, { Component } from 'react';\nimport { getRoundDetails } from '.././graphql/queries';\nimport { API, graphqlOperation } from 'aws-amplify';\nimport web3 from '../ethereum/web3.js';\nimport Campaign from '../ethereum/campaign';\nimport { Link } from 'react-router-dom';\nimport { Grid, Divider, Button, Segment, Container, Header, Icon } from 'semantic-ui-react';\n\n\nclass RoundDetailsPage extends Component {\n\n  state = {\n    weiRaise: '',\n    goal: '',\n    openingTime: '',\n    closingTime: '',\n    details: {\n      companyName: '', \n      email: '', \n      url: '', \n      direction: '', \n      companyDescription: '', \n      youtube: '', \n      membersNames: [''], \n      membersLinkedin: [''], \n      bussinesModel: '', \n      roundPurpose: '',\n      id: '',\n      tokenValue: ''\n    }\n  }\n\n\n\n  async componentDidMount() {\n\n    //Linkedin Plugin\n    const script = document.createElement(\"script\");\n    script.setAttribute('type','text/javascript');\n    script.setAttribute('src','https://platform.linkedin.com/badges/js/profile.js');\n    // script.setAttribute('async');\n    // script.setAttribute('defer')\n    document.head.appendChild(script);\n    //Linkedin Plugin\n\n\n\n    const campaignID = this.props.match.params.id;\n\n    try {\n      const campaign = Campaign(campaignID, web3);\n      const weiRaise = await campaign.methods.weiRaised().call();\n      const goal = await campaign.methods.goal().call();\n      const openingTime = await campaign.methods.openingTime().call();\n      const closingTime = await campaign.methods.closingTime().call();\n\n      this.setState({ weiRaise, goal, openingTime, closingTime });\n      console.log(\"Ethereum Data: \" + weiRaise, goal, openingTime, closingTime);\n\n    } \n    catch (err) \n    {\n      console.log('error fetching data from Ethereum...', err)\n    }\n\n    try \n    {\n      console.log(\"Props Data \", this.props.match );\n      const roundsData = await API.graphql(graphqlOperation(getRoundDetails, { id: this.props.match.params.id }));\n      console.log(\"GraphQl Data: \", roundsData.data.getRoundDetails);\n      this.setState({ details : roundsData.data.getRoundDetails });\n    } \n    catch (err) \n    {\n      console.log('error fetching data from GraphQL...', err)\n    }\n  }\n\n  renderMembers = (names, linkedins) => {\n    \n    console.log(names, linkedins); //error aqui\n\n    if(names === undefined || linkedins === undefined)\n    {\n      return <div>loading</div>\n    }\n    else{\n      const members = names.map( (name, index) => {\n        let lbl = \"\" + name + index;\n        return (           \n            <Grid.Column key={lbl}>\n              <div \n                className=\"LI-profile-badge\"  \n                data-version=\"v1\" \n                data-size=\"medium\" \n                data-locale=\"es_ES\" \n                data-type=\"vertical\" \n                data-theme=\"dark\" \n                data-vanity=\"aldemaro-gonzalez\"\n              >\n                <a \n                  className=\"LI-simple-link\" \n                  href='https://es.linkedin.com/in/aldemaro-gonzalez?trk=profile-badge'\n                >\n                  {name}\n                </a>\n              </div>\n            </Grid.Column>\n        )\n      });\n      return members;\n    }\n  }\n\n  renderEthereumDetails = () => {\n    return (\n      <Grid.Column style={{ paddingBottom: '5em', paddingTop: '5em' }}>\n        <Header as='h3' style={{ fontSize: '2em' }}>\n          Detalles de la Ronda\n        </Header>\n        \n          Mucho Ether\n      </Grid.Column>\n    )\n  }\n\n  render()\n  {\n    let { weiRaise, goal, openingTime, closingTime } = this.state;\n    let { companyName, email, url, direction, companyDescription, youtube, membersNames, membersLinkedin, bussinesModel, roundPurpose, id, tokenValue } = this.state.details;\n\n    return ( \n      <Segment>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column textAlign=\"center\">\n              <h2>{companyName}</h2>\n            </Grid.Column>\n          </Grid.Row>\n        \n          <Grid.Row>\n            <Grid.Column textAlign=\"center\">\n              <h1>Video de Youtube que me recarga la pagina y hace que los parametros de la url cambien</h1>\n              {/* <iframe \n                title={companyName}\n                width=\"560\" \n                height=\"315\" \n                src={youtube} \n                allow='autoplay; encrypted-media; picture-in-picture' \n                allowFullScreen\n              >\n              </iframe> */}\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n\n        <Divider\n          as='h4'\n          className='header'\n          horizontal\n          style={{ margin: '3em 0em', textTransform: 'uppercase' }}\n        >\n          <Icon style={{ 'marginRight': '0'}} name=\"angle down\"/>\n        </Divider>\n      \n        <Grid celled='internally' columns='equal' stackable>\n          <Grid.Row textAlign='center'>\n            <Grid.Column style={{ paddingBottom: '5em', paddingTop: '5em' }}>\n              <Header as='h3' style={{ fontSize: '2em' }}>\n                Descripción de la Idea\n              </Header>\n              <p style={{ fontSize: '1.33em' }}>{companyDescription}</p>\n            </Grid.Column>\n            \n            \n              \n            <Grid.Column style={{ paddingBottom: '5em', paddingTop: '5em' }}>\n              <Header as='h3' style={{ fontSize: '2em' }}>\n                Detalles de la Ronda\n              </Header>\n                <h2>Wei Raise: {weiRaise}</h2> \n                <h2>Goal: {goal}</h2>\n                <h2>Opening Time: {openingTime}</h2>\n                <h2>Closing Time: {closingTime}</h2>\n\n            </Grid.Column>\n              \n            \n          </Grid.Row>\n        </Grid>\n        <Divider\n            as='h1'\n            className='header'\n            horizontal\n            style={{ margin: '3em 0em', textTransform: 'uppercase' }}\n          >\n            Información de la Empresa\n        </Divider>\n\n        <Container text>\n          <Grid>\n          <Grid.Row columns='12'>\n            <Grid.Column textAlign=\"center\" width='4'>\n              EMAIL: <h4>{email}</h4>\n            </Grid.Column>\n            <Grid.Column textAlign=\"center\" width='4'>\n              URL: <h4>{url}</h4>\n            </Grid.Column>\n            <Grid.Column textAlign=\"center\" width='4'>\n              Direccion: <h4>{direction}</h4>\n            </Grid.Column>\n          </Grid.Row>\n          </Grid>\n\n          <Divider\n            as='h1'\n            className='header'\n            horizontal\n            style={{ margin: '3em 0em', textTransform: 'uppercase' }}\n          >\n            Equipo\n          </Divider>\n          \n          <Grid>\n            <Grid.Row columns='2'>\n              {this.renderMembers(membersNames, membersLinkedin)}\n            </Grid.Row>\n          </Grid>\n\n        <Divider\n          as='h1'\n          className='header'\n          horizontal\n          style={{ margin: '3em 0em', textTransform: 'uppercase' }}\n        >\n          Detalles\n        </Divider>\n\n        <Grid celled='internally' columns='equal' stackable>\n          <Grid.Row textAlign='center'>\n            <Grid.Column style={{ paddingBottom: '5em', paddingTop: '5em' }}>\n              <Header as='h3' style={{ fontSize: '2em' }}>\n                Modelo de Negocio\n              </Header>\n              <p style={{ fontSize: '1.33em' }}>{bussinesModel}</p>\n            </Grid.Column>\n            <Grid.Column style={{ paddingBottom: '5em', paddingTop: '5em' }}>\n              <Header as='h3' style={{ fontSize: '2em' }}>\n                Propósito de la Ronda\n              </Header>\n              {roundPurpose}\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n\n        </Container>\n\n        <Button \n          size='massive' \n          style={\n            { \n              position: \"fixed\",\n              margin: \"2em\",\n              bottom: \"0px\",\n              left: \"0px\",\n              animation: \"1.5s ease-in-out 0s infinite normal none running back-to-docs\",\n            }\n          }\n          color='green'\n        >\n          <Link to={{\n            pathname: `/${id}/invest`,\n            roundDetails: {\n              companyName,\n              tokenValue\n            } \n          }}\n          >\n            Invertir\n          </Link>\n        </Button>\n      </Segment>)\n  }\n\n}\n\n\n\nexport default RoundDetailsPage;","/Users/aldemarogonzalez/Desktop/TFG/tfg/src/ethereum/web3.js",[],"/Users/aldemarogonzalez/Desktop/TFG/tfg/src/components/questions.js",[],"/Users/aldemarogonzalez/Desktop/TFG/tfg/src/ethereum/campaignFactory.js",[],"/Users/aldemarogonzalez/Desktop/TFG/tfg/src/graphql/queries.js",[],"/Users/aldemarogonzalez/Desktop/TFG/tfg/src/graphql/mutations.js",[],"/Users/aldemarogonzalez/Desktop/TFG/tfg/src/containers/CreateRoundPage.js",[],"/Users/aldemarogonzalez/Desktop/TFG/tfg/src/containers/CreateCampaignPage.js",[],"/Users/aldemarogonzalez/Desktop/TFG/tfg/src/containers/InvestPage.js",["71"],"/Users/aldemarogonzalez/Desktop/TFG/tfg/src/ethereum/campaign.js",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":130,"column":67,"nodeType":"78","messageId":"79","endLine":130,"endColumn":74},{"ruleId":"76","severity":1,"message":"80","line":30,"column":11,"nodeType":"78","messageId":"79","endLine":30,"endColumn":17},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'youtube' is assigned a value but never used.","Identifier","unusedVar","'txHash' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]