[{"/Users/aldemarogonzalez/Desktop/TFG/tfg/src/index.js":"1","/Users/aldemarogonzalez/Desktop/TFG/tfg/src/aws-exports.js":"2","/Users/aldemarogonzalez/Desktop/TFG/tfg/src/App.js":"3","/Users/aldemarogonzalez/Desktop/TFG/tfg/src/components/layout.js":"4","/Users/aldemarogonzalez/Desktop/TFG/tfg/src/components/header.js":"5","/Users/aldemarogonzalez/Desktop/TFG/tfg/src/containers/HomePage.js":"6","/Users/aldemarogonzalez/Desktop/TFG/tfg/src/containers/RoundDetailsPage.js":"7","/Users/aldemarogonzalez/Desktop/TFG/tfg/src/ethereum/web3.js":"8","/Users/aldemarogonzalez/Desktop/TFG/tfg/src/components/questions.js":"9","/Users/aldemarogonzalez/Desktop/TFG/tfg/src/ethereum/campaignFactory.js":"10","/Users/aldemarogonzalez/Desktop/TFG/tfg/src/graphql/queries.js":"11","/Users/aldemarogonzalez/Desktop/TFG/tfg/src/graphql/mutations.js":"12","/Users/aldemarogonzalez/Desktop/TFG/tfg/src/containers/CreateRoundPage.js":"13","/Users/aldemarogonzalez/Desktop/TFG/tfg/src/containers/CreateCampaignPage.js":"14","/Users/aldemarogonzalez/Desktop/TFG/tfg/src/containers/InvestPage.js":"15","/Users/aldemarogonzalez/Desktop/TFG/tfg/src/ethereum/campaign.js":"16"},{"size":319,"mtime":1609935754323,"results":"17","hashOfConfig":"18"},{"size":497,"mtime":1611851452506,"results":"19","hashOfConfig":"18"},{"size":320,"mtime":1597615028890,"results":"20","hashOfConfig":"18"},{"size":2550,"mtime":1609876623150,"results":"21","hashOfConfig":"18"},{"size":1376,"mtime":1609872930904,"results":"22","hashOfConfig":"18"},{"size":1493,"mtime":1609957393677,"results":"23","hashOfConfig":"18"},{"size":8714,"mtime":1611869647986,"results":"24","hashOfConfig":"18"},{"size":399,"mtime":1601982506480,"results":"25","hashOfConfig":"18"},{"size":586,"mtime":1597841634570,"results":"26","hashOfConfig":"18"},{"size":644,"mtime":1609930489810,"results":"27","hashOfConfig":"18"},{"size":1038,"mtime":1611851454453,"results":"28","hashOfConfig":"18"},{"size":1585,"mtime":1611851454534,"results":"29","hashOfConfig":"18"},{"size":8824,"mtime":1611869464657,"results":"30","hashOfConfig":"18"},{"size":9634,"mtime":1609955246207,"results":"31","hashOfConfig":"18"},{"size":3529,"mtime":1609969711299,"results":"32","hashOfConfig":"18"},{"size":192,"mtime":1609936669054,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"3salhw",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/Users/aldemarogonzalez/Desktop/TFG/tfg/src/index.js",[],["68","69"],"/Users/aldemarogonzalez/Desktop/TFG/tfg/src/aws-exports.js",[],"/Users/aldemarogonzalez/Desktop/TFG/tfg/src/App.js",[],"/Users/aldemarogonzalez/Desktop/TFG/tfg/src/components/layout.js",[],"/Users/aldemarogonzalez/Desktop/TFG/tfg/src/components/header.js",[],"/Users/aldemarogonzalez/Desktop/TFG/tfg/src/containers/HomePage.js",[],"/Users/aldemarogonzalez/Desktop/TFG/tfg/src/containers/RoundDetailsPage.js",[],"/Users/aldemarogonzalez/Desktop/TFG/tfg/src/ethereum/web3.js",[],"/Users/aldemarogonzalez/Desktop/TFG/tfg/src/components/questions.js",[],"/Users/aldemarogonzalez/Desktop/TFG/tfg/src/ethereum/campaignFactory.js",[],"/Users/aldemarogonzalez/Desktop/TFG/tfg/src/graphql/queries.js",[],"/Users/aldemarogonzalez/Desktop/TFG/tfg/src/graphql/mutations.js",[],"/Users/aldemarogonzalez/Desktop/TFG/tfg/src/containers/CreateRoundPage.js",[],"/Users/aldemarogonzalez/Desktop/TFG/tfg/src/containers/CreateCampaignPage.js",[],"/Users/aldemarogonzalez/Desktop/TFG/tfg/src/containers/InvestPage.js",["70"],"import React, { Component } from 'react';\nimport { Grid, Message, Segment, Button, Form, Input, Label, Icon} from 'semantic-ui-react';\nimport web3 from '../ethereum/web3.js';\n\nclass InvestPage extends Component {\n\n  state = {\n    etherToSend: '',\n    tokenValue: this.props.location.roundDetails.tokenValue\n  }\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  onSubmit = async () => {\n\n    const account = await window.ethereum.request(\n      { method: 'eth_requestAccounts' }\n    );\n  \n    let wei =  web3.utils.toWei(this.state.etherToSend, 'ether');\n\n    const transactionParameters = {\n      to: this.props.match.params.id, \n      from: account[0], \n      value: web3.utils.toHex(wei)\n    };\n\n    const txHash = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: [transactionParameters],\n    });\n    \n  }\n\n  render() {\n    return (\n      <div>\n        <Segment>\n          <Form onSubmit={this.onSubmit}>\n            <Grid>\n              <Grid.Row>\n                <Grid.Column textAlign=\"center\">\n                  <h1>{this.props.location.roundDetails.companyName}</h1>\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Column textAlign=\"center\">\n                  <h2>Wallet Address: {this.props.match.params.id} </h2>\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Column textAlign=\"center\">\n                  <Form.Field>\n                    <Input labelPosition='right' type='text' placeholder=''>\n                      <Label basic>¿Cuánto ETH se desea aportar? </Label>\n                        <input\n                          name='etherToSend'\n                          onChange={this.onChange}\n                          value={this.state.etherToSend}\n                          placeholder=''\n                          type=\"number\"\n                          min=\"0\"\n                        />\n                      <Label><Icon name='ethereum'/></Label>\n                    </Input>\n                  </Form.Field>\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Column textAlign=\"center\">\n                  <Input labelPosition='right' type='text' placeholder='Amount'>\n                    <Label basic>Token a recibir </Label>\n                      <input\n                        name='tokenName'                       \n                        value={this.state.etherToSend / this.state.tokenValue}\n                        type=\"text\"\n                        readOnly\n                      />\n                    <Label><Icon name='cny'/></Label>\n                  </Input>\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Column textAlign=\"center\">\n                  <Button color='green'>\n                    Invertir\n                  </Button>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Form>\n        </Segment>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column>\n              <Message>\n                <Message.Header>\n                  Politica y Privacidad\n                </Message.Header>\n                <p>\n                  Todos los datos serán tratados de forma anónima\n                </p>\n              </Message>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div>\n    )\n  }\n}\n  \nexport default InvestPage;","/Users/aldemarogonzalez/Desktop/TFG/tfg/src/ethereum/campaign.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":30,"column":11,"nodeType":"77","messageId":"78","endLine":30,"endColumn":17},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'txHash' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]